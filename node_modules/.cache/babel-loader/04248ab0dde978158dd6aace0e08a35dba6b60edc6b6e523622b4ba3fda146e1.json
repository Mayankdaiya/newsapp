{"ast":null,"code":"import{useState}from\"react\";import Theme from\"./Theme\";import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeProvider=props=>{const[theme,setTheme]=useState(\"light\");const toggleTheme=()=>{if(theme===\"light\")setTheme(\"dark\");else setTheme(\"light\");};return/*#__PURE__*/_jsx(Theme.Provider,{value:{theme,toggleTheme},children:props.children});};export default ThemeProvider;","map":{"version":3,"names":["useState","Theme","jsx","_jsx","ThemeProvider","props","theme","setTheme","toggleTheme","Provider","value","children"],"sources":["E:/Study/Full Stack Web D/React/newsapp/src/context/ThemeProvider.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Theme from \"./Theme\";\r\n\r\nconst ThemeProvider = (props) => {\r\n    const [theme, setTheme] = useState(\"light\") \r\n    const toggleTheme = () =>{\r\n        if(theme===\"light\") setTheme(\"dark\")\r\n        else setTheme(\"light\")\r\n    }\r\n\r\n    return (\r\n        <Theme.Provider value={{theme, toggleTheme}}>\r\n            {props.children}\r\n        </Theme.Provider>\r\n    )\r\n}\r\n\r\nexport default ThemeProvider;"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,KAAK,KAAM,SAAS,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5B,KAAM,CAAAC,aAAa,CAAIC,KAAK,EAAK,CAC7B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAQ,WAAW,CAAGA,CAAA,GAAK,CACrB,GAAGF,KAAK,GAAG,OAAO,CAAEC,QAAQ,CAAC,MAAM,CAAC,KAC/B,CAAAA,QAAQ,CAAC,OAAO,CAAC,CAC1B,CAAC,CAED,mBACIJ,IAAA,CAACF,KAAK,CAACQ,QAAQ,EAACC,KAAK,CAAE,CAACJ,KAAK,CAAEE,WAAW,CAAE,CAAAG,QAAA,CACvCN,KAAK,CAACM,QAAQ,CACH,CAAC,CAEzB,CAAC,CAED,cAAe,CAAAP,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}